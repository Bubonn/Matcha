{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: {\n    id: 0,\n    firstName: null,\n    // token: '',\n    avatar: null\n  }\n};\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState,\n  reducers: {\n    // saveInfoUser: (currentSlice: any, action: PayloadAction<{\n    // \tid: number;\n    // \t// firstName: string;\n    // \t// userStatus: string;\n    // \t// avatar: string;\n    // }>) => {\n    // saveInfoUser: (currentSlice: any, action: PayloadAction<number>) => {\n    // console.log('action', action.payload);\n    // currentSlice.user.id = action.payload;\n    // currentSlice.user.firstName = action.payload.firstName;\n    // currentSlice.user.status = action.payload.userStatus;\n    // currentSlice.user.avatar = action.payload.avatar;\n    // },\n    // setToken: (currentSlice: any, action: PayloadAction<string>) => {\n    // \tcurrentSlice.user.token = action.payload;\n    // },\n    // setAvatar: (currentSlice: any, action: PayloadAction<string>) => {\n    // \tcurrentSlice.user.avatar = action.payload;\n    // },\n\n    saveId: (currentSlice, action) => {\n      return {\n        ...currentSlice,\n        user: {\n          ...currentSlice.user,\n          id: action.payload\n        }\n      };\n    },\n    saveFirstName: (currentSlice, action) => {\n      return {\n        ...currentSlice,\n        user: {\n          ...currentSlice.user,\n          firstName: action.payload\n        }\n      };\n    },\n    saveAvatar: (currentSlice, action) => {\n      return {\n        ...currentSlice,\n        user: {\n          ...currentSlice.user,\n          avatar: action.payload\n        }\n      };\n    }\n  }\n});\nconst {\n  saveId,\n  saveFirstName,\n  saveAvatar\n} = userSlice.actions;\n// const { saveInfoUser, setAvatar, setToken } = userSlice.actions;\n\n// export { saveInfoUser, setAvatar, setToken };\nexport { saveId, saveFirstName, saveAvatar };\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","id","firstName","avatar","userSlice","name","reducers","saveId","currentSlice","action","payload","saveFirstName","saveAvatar","actions","reducer"],"sources":["/Users/jb/projets/my_matcha/frontend/src/store/user/user-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface UserState {\n\tuser: {\n\t\tid: number;\n\t\tfirstName: string;\n\t\t// token: string;\n\t\tavatar: any;\n\t};\n}\n\nconst initialState: UserState = {\n\tuser: {\n\t\tid: 0,\n\t\tfirstName: null,\n\t\t// token: '',\n\t\tavatar: null,\n\t},\n};\n\nconst userSlice = createSlice({\n\tname: \"userSlice\",\n\tinitialState,\n\treducers: {\n\t\t// saveInfoUser: (currentSlice: any, action: PayloadAction<{\n\t\t// \tid: number;\n\t\t// \t// firstName: string;\n\t\t// \t// userStatus: string;\n\t\t// \t// avatar: string;\n\t\t// }>) => {\n\t\t// saveInfoUser: (currentSlice: any, action: PayloadAction<number>) => {\n\t\t\t// console.log('action', action.payload);\n\t\t\t// currentSlice.user.id = action.payload;\n\t\t\t// currentSlice.user.firstName = action.payload.firstName;\n\t\t\t// currentSlice.user.status = action.payload.userStatus;\n\t\t\t// currentSlice.user.avatar = action.payload.avatar;\n\t\t// },\n\t\t// setToken: (currentSlice: any, action: PayloadAction<string>) => {\n\t\t// \tcurrentSlice.user.token = action.payload;\n\t\t// },\n\t\t// setAvatar: (currentSlice: any, action: PayloadAction<string>) => {\n\t\t// \tcurrentSlice.user.avatar = action.payload;\n\t\t// },\n\n\t\tsaveId: (currentSlice: UserState, action: PayloadAction<number>) => {\n\t\t\treturn {\n\t\t\t\t...currentSlice,\n\t\t\t\tuser: {\n\t\t\t\t\t...currentSlice.user,\n\t\t\t\t\tid: action.payload,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tsaveFirstName: (currentSlice: UserState, action: PayloadAction<string>) => {\n\t\t\treturn {\n\t\t\t\t...currentSlice,\n\t\t\t\tuser: {\n\t\t\t\t\t...currentSlice.user,\n\t\t\t\t\tfirstName: action.payload,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tsaveAvatar: (currentSlice: UserState, action: PayloadAction<any>) => {\n\t\t\treturn {\n\t\t\t\t...currentSlice,\n\t\t\t\tuser: {\n\t\t\t\t\t...currentSlice.user,\n\t\t\t\t\tavatar: action.payload,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t},\n});\n\nconst { saveId, saveFirstName, saveAvatar } = userSlice.actions;\n// const { saveInfoUser, setAvatar, setToken } = userSlice.actions;\n\n// export { saveInfoUser, setAvatar, setToken };\nexport { saveId, saveFirstName, saveAvatar };\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAW7D,MAAMC,YAAuB,GAAG;EAC/BC,IAAI,EAAE;IACLC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,IAAI;IACf;IACAC,MAAM,EAAE;EACT;AACD,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,WAAW;EACjBN,YAAY;EACZO,QAAQ,EAAE;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACC;IACA;IACA;IACA;IACA;IACD;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC,MAAM,EAAEA,CAACC,YAAuB,EAAEC,MAA6B,KAAK;MACnE,OAAO;QACN,GAAGD,YAAY;QACfR,IAAI,EAAE;UACL,GAAGQ,YAAY,CAACR,IAAI;UACpBC,EAAE,EAAEQ,MAAM,CAACC;QACZ;MACD,CAAC;IACF,CAAC;IACDC,aAAa,EAAEA,CAACH,YAAuB,EAAEC,MAA6B,KAAK;MAC1E,OAAO;QACN,GAAGD,YAAY;QACfR,IAAI,EAAE;UACL,GAAGQ,YAAY,CAACR,IAAI;UACpBE,SAAS,EAAEO,MAAM,CAACC;QACnB;MACD,CAAC;IACF,CAAC;IACDE,UAAU,EAAEA,CAACJ,YAAuB,EAAEC,MAA0B,KAAK;MACpE,OAAO;QACN,GAAGD,YAAY;QACfR,IAAI,EAAE;UACL,GAAGQ,YAAY,CAACR,IAAI;UACpBG,MAAM,EAAEM,MAAM,CAACC;QAChB;MACD,CAAC;IACF;EACD;AACD,CAAC,CAAC;AAEF,MAAM;EAAEH,MAAM;EAAEI,aAAa;EAAEC;AAAW,CAAC,GAAGR,SAAS,CAACS,OAAO;AAC/D;;AAEA;AACA,SAASN,MAAM,EAAEI,aAAa,EAAEC,UAAU;AAC1C,eAAeR,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}